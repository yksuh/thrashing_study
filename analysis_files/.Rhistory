# sqlserver
sqlserver <- subset(x, x$DBMS=='sqlserver')
sqlserver$ATP = (sqlserver$ATP-min(sqlserver$ATP))/(max(sqlserver$ATP)-sqlserver$ATP)
sqlserver$ATP[is.infinite(sqlserver$ATP)] <- 1
sqlserver$MAXMPL = (sqlserver$MAXMPL-min(sqlserver$MAXMPL))/(max(sqlserver$MAXMPL)-sqlserver$MAXMPL)
sqlserver$MAXMPL[is.infinite(sqlserver$MAXMPL)] <- 1
x = rbind(db2,oracle,pgsql,mysql,sqlserver) 
x
db2 <- subset(x, x$DBMS=='db2')
db2$ATP = (db2$ATP-min(db2$ATP))/(max(db2$ATP)-min(db2$ATP))
db2$MAXMPL = (db2$MAXMPL-min(db2$MAXMPL))/(max(db2$MAXMPL)-min(db2$MAXMPL))
# oracle
oracle <- subset(x, x$DBMS=='oracle')
oracle$ATP = (oracle$ATP-min(oracle$ATP))/(max(oracle$ATP)-min(oracle$ATP))
oracle$MAXMPL = (oracle$MAXMPL-min(oracle$MAXMPL))/(max(oracle$MAXMPL)-min(oracle$MAXMPL))
# pgsql
pgsql <- subset(x, x$DBMS=='pgsql')
pgsql$ATP = (pgsql$ATP-min(pgsql$ATP))/(max(pgsql$ATP)-min(pgsql$ATP))
pgsql$MAXMPL = (pgsql$MAXMPL-min(pgsql$MAXMPL))/(max(pgsql$MAXMPL)-min(pgsql$MAXMPL))
# mysql
mysql <- subset(x, x$DBMS=='mysql')
mysql$ATP = (mysql$ATP-min(mysql$ATP))/(max(mysql$ATP)-min(pgsql$ATP))
mysql$MAXMPL = (mysql$MAXMPL-min(mysql$MAXMPL))/(max(mysql$MAXMPL)-min(mysql$MAXMPL))
# sqlserver
sqlserver <- subset(x, x$DBMS=='sqlserver')
sqlserver$ATP = (sqlserver$ATP-min(sqlserver$ATP))/(max(sqlserver$ATP)-min(sqlserver$ATP))
sqlserver$MAXMPL = (sqlserver$MAXMPL-min(sqlserver$MAXMPL))/(max(sqlserver$MAXMPL)-min(sqlserver$MAXMPL))
x = rbind(db2,oracle,pgsql,mysql,sqlserver) 
x
x = read.csv(file="expl.dat",head=TRUE,sep="\t")
library("mediation")
set.seed(2014)
# ATP normalization
# db2
db2 <- subset(x, x$DBMS=='db2')
db2$ATP = (db2$ATP-min(db2$ATP))/(max(db2$ATP)-min(db2$ATP))
db2$MAXMPL = (db2$MAXMPL-min(db2$MAXMPL))/(max(db2$MAXMPL)-min(db2$MAXMPL))
# oracle
oracle <- subset(x, x$DBMS=='oracle')
oracle$ATP = (oracle$ATP-min(oracle$ATP))/(max(oracle$ATP)-min(oracle$ATP))
oracle$MAXMPL = (oracle$MAXMPL-min(oracle$MAXMPL))/(max(oracle$MAXMPL)-min(oracle$MAXMPL))
# pgsql
pgsql <- subset(x, x$DBMS=='pgsql')
pgsql$ATP = (pgsql$ATP-min(pgsql$ATP))/(max(pgsql$ATP)-min(pgsql$ATP))
pgsql$MAXMPL = (pgsql$MAXMPL-min(pgsql$MAXMPL))/(max(pgsql$MAXMPL)-min(pgsql$MAXMPL))
# mysql
mysql <- subset(x, x$DBMS=='mysql')
mysql$ATP = (mysql$ATP-min(mysql$ATP))/(max(mysql$ATP)-min(pgsql$ATP))
mysql$MAXMPL = (mysql$MAXMPL-min(mysql$MAXMPL))/(max(mysql$MAXMPL)-min(mysql$MAXMPL))
# sqlserver
sqlserver <- subset(x, x$DBMS=='sqlserver')
sqlserver$ATP = (sqlserver$ATP-min(sqlserver$ATP))/(max(sqlserver$ATP)-min(sqlserver$ATP))
sqlserver$MAXMPL = (sqlserver$MAXMPL-min(sqlserver$MAXMPL))/(max(sqlserver$MAXMPL)-min(sqlserver$MAXMPL))
x = rbind(db2,oracle,pgsql,mysql,sqlserver) 
x$ACTROWPOOL = (x$ACTROWPOOL-min(x$ACTROWPOOL))/(max(x$ACTROWPOOL)-min(x$ACTROWPOOL))
x$PCTREAD = (x$PCTREAD-min(x$PCTREAD))/(max(x$PCTREAD)-min(x$PCTREAD))
x$PCTUPDATE = (x$PCTUPDATE-min(x$PCTUPDATE))/(max(x$PCTUPDATE)-min(x$PCTUPDATE))
x = read.csv(file="expl.dat",head=TRUE,sep="\t")
library("mediation")
set.seed(2014)
# ATP normalization
# db2
db2 <- subset(x, x$DBMS=='db2')
db2$ATP = (db2$ATP-min(db2$ATP))/(max(db2$ATP)-min(db2$ATP))
db2$MAXMPL = (db2$MAXMPL-min(db2$MAXMPL))/(max(db2$MAXMPL)-min(db2$MAXMPL))
# oracle
oracle <- subset(x, x$DBMS=='oracle')
oracle$ATP = (oracle$ATP-min(oracle$ATP))/(max(oracle$ATP)-min(oracle$ATP))
oracle$MAXMPL = (oracle$MAXMPL-min(oracle$MAXMPL))/(max(oracle$MAXMPL)-min(oracle$MAXMPL))
# pgsql
pgsql <- subset(x, x$DBMS=='pgsql')
pgsql$ATP = (pgsql$ATP-min(pgsql$ATP))/(max(pgsql$ATP)-min(pgsql$ATP))
pgsql$MAXMPL = (pgsql$MAXMPL-min(pgsql$MAXMPL))/(max(pgsql$MAXMPL)-min(pgsql$MAXMPL))
# mysql
mysql <- subset(x, x$DBMS=='mysql')
mysql$ATP = (mysql$ATP-min(mysql$ATP))/(max(mysql$ATP)-min(pgsql$ATP))
mysql$MAXMPL = (mysql$MAXMPL-min(mysql$MAXMPL))/(max(mysql$MAXMPL)-min(mysql$MAXMPL))
# sqlserver
sqlserver <- subset(x, x$DBMS=='sqlserver')
sqlserver$ATP = (sqlserver$ATP-min(sqlserver$ATP))/(max(sqlserver$ATP)-min(sqlserver$ATP))
sqlserver$MAXMPL = (sqlserver$MAXMPL-min(sqlserver$MAXMPL))/(max(sqlserver$MAXMPL)-min(sqlserver$MAXMPL))
x = rbind(db2,oracle,pgsql,mysql,sqlserver) 
x$ACTROWPOOL = (x$ACTROWPOOL-min(x$ACTROWPOOL))/(max(x$ACTROWPOOL)-min(x$ACTROWPOOL))
x$PCTREAD = (x$PCTREAD-min(x$PCTREAD))/(max(x$PCTREAD)-min(x$PCTREAD))
x$PCTUPDATE = (x$PCTUPDATE-min(x$PCTUPDATE))/(max(x$PCTUPDATE)-min(x$PCTUPDATE))
x$NUMPROCESSORS = (x$NUMPROCESSORS-min(x$NUMPROCESSORS))/(max(x$NUMPROCESSORS)-min(x$NUMPROCESSORS))
med.fit <- lm(ATP ~ NUMPROCESSORS+ACTROWPOOL+NUMPROCESSORS*ACTROWPOOL+PK+PCTUPDATE+PK*PCTUPDATE+PCTREAD+PK*PCTREAD, data = x)
summary(med.fit)
out.fit <- glm(MAXMPL ~ ATP + PCTREAD + PCTUPDATE + ACTROWPOOL + NUMPROCESSORS, data = x)
summary(out.fit)
med.out <- mediate(med.fit, out.fit, mediator = "ATP", treat = "NUMPROCESSORS", robustSE = TRUE)
summary(med.out)
med.out <- mediate(med.fit, out.fit, mediator = "ATP", treat = "ACTROWPOOL", robustSE = TRUE)
x
med.fit <- lm(ATP ~ NUMPROCESSORS+ACTROWPOOL+NUMPROCESSORS*ACTROWPOOL+PK+PCTUPDATE+PK*PCTUPDATE+PCTREAD+PK*PCTREAD, data = x)
summary(med.fit)
out.fit <- glm(MAXMPL ~ ATP + PCTREAD + PCTUPDATE + ACTROWPOOL + NUMPROCESSORS, data = x)
summary(out.fit)
med.out <- mediate(med.fit, out.fit, mediator = "ATP", treat = "NUMPROCESSORS", robustSE = TRUE)
med.out <- mediate(med.fit, out.fit, mediator = "ATP", treat = "NUMPROCESSORS", robustSE = TRUE, family=binnomial("probit"))
med.out <- mediate(med.fit, out.fit, mediator = "ATP", treat = "NUMPROCESSORS", robustSE = TRUE, family=binomial("probit"))
summary(med.out)
library("lavaan")
library("mediation")
out.fit <- lm(MAXMPL ~ ATP + PCTREAD + PCTUPDATE + ACTROWPOOL + NUMPROCESSORS, data = x)
summary(out.fit)
x = read.csv(file="expl.dat",head=TRUE,sep="\t")
library("mediation")
set.seed(2014)
out.fit <- lm(MAXMPL ~ ATP + PCTREAD + PCTUPDATE + ACTROWPOOL + NUMPROCESSORS, data = x)
summary(out.fit)
med.fit <- lm(ATP ~ NUMPROCESSORS+ACTROWPOOL+NUMPROCESSORS*ACTROWPOOL+PK+PCTUPDATE+PK*PCTUPDATE+PCTREAD+PK*PCTREAD, data = x)
summary(med.fit)
x = read.csv(file="expl.dat",head=TRUE,sep="\t")
library("mediation")
set.seed(2014)
# ATP normalization
# db2
db2 <- subset(x, x$DBMS=='db2')
db2$ATP = (db2$ATP-min(db2$ATP))/(max(db2$ATP)-min(db2$ATP))
db2$MAXMPL = (db2$MAXMPL-min(db2$MAXMPL))/(max(db2$MAXMPL)-min(db2$MAXMPL))
# oracle
oracle <- subset(x, x$DBMS=='oracle')
oracle$ATP = (oracle$ATP-min(oracle$ATP))/(max(oracle$ATP)-min(oracle$ATP))
oracle$MAXMPL = (oracle$MAXMPL-min(oracle$MAXMPL))/(max(oracle$MAXMPL)-min(oracle$MAXMPL))
# pgsql
pgsql <- subset(x, x$DBMS=='pgsql')
pgsql$ATP = (pgsql$ATP-min(pgsql$ATP))/(max(pgsql$ATP)-min(pgsql$ATP))
pgsql$MAXMPL = (pgsql$MAXMPL-min(pgsql$MAXMPL))/(max(pgsql$MAXMPL)-min(pgsql$MAXMPL))
# mysql
mysql <- subset(x, x$DBMS=='mysql')
mysql$ATP = (mysql$ATP-min(mysql$ATP))/(max(mysql$ATP)-min(pgsql$ATP))
mysql$MAXMPL = (mysql$MAXMPL-min(mysql$MAXMPL))/(max(mysql$MAXMPL)-min(mysql$MAXMPL))
# sqlserver
sqlserver <- subset(x, x$DBMS=='sqlserver')
sqlserver$ATP = (sqlserver$ATP-min(sqlserver$ATP))/(max(sqlserver$ATP)-min(sqlserver$ATP))
sqlserver$MAXMPL = (sqlserver$MAXMPL-min(sqlserver$MAXMPL))/(max(sqlserver$MAXMPL)-min(sqlserver$MAXMPL))
x = rbind(db2,oracle,pgsql,mysql,sqlserver) 
x$ACTROWPOOL = (x$ACTROWPOOL-min(x$ACTROWPOOL))/(max(x$ACTROWPOOL)-min(x$ACTROWPOOL))
x$PCTREAD = (x$PCTREAD-min(x$PCTREAD))/(max(x$PCTREAD)-min(x$PCTREAD))
x$PCTUPDATE = (x$PCTUPDATE-min(x$PCTUPDATE))/(max(x$PCTUPDATE)-min(x$PCTUPDATE))
x$NUMPROCESSORS = (x$NUMPROCESSORS-min(x$NUMPROCESSORS))/(max(x$NUMPROCESSORS)-min(x$NUMPROCESSORS))
out.fit <- lm(MAXMPL ~ ATP + PCTREAD + PCTUPDATE + ACTROWPOOL + NUMPROCESSORS, data = x)
summary(out.fit)
med.fit <- lm(ATP ~ NUMPROCESSORS+ACTROWPOOL+NUMPROCESSORS*ACTROWPOOL+PK+PCTUPDATE+PK*PCTUPDATE+PCTREAD+PK*PCTREAD, data = x)
summary(med.fit)
library("lavann")
library("lavaan")
model <- '
+    # direct effect
+      x$MAXMPL ~ b1*x$ATP+c2*x$PCTREAD + c3*x$PCTUPDATE + c4*x$ACTROWPOOL + c5*x$NUMPROCESSORS
+    # mediator
+      x$ATP ~ a1*NUMPROCESSORS+a2*ACTROWPOOL+a3*NUMPROCESSORS*ACTROWPOOL+a4*PK+a5*PCTUPDATE+a6*PK*PCTUPDATE+a7*PCTREAD+a8*PK*PCTREAD
+      x$MAXMPL ~ b1*x$ATP
+    # indirect effect 
+      ie := a1*b1 + a2*b1 + a3*b1 + a4*b1 + a5*b1 + a6*b1 + a7*b1 + a8*b1 
+    # total effect
+      total := (b1+c2+c3+c4+c5)+(a1*b1 + a2*b1 + a3*b1 + a4*b1 + a5*b1 + a6*b1 + a7*b1 + a8*b1)'
thrashing_model <- '
    # direct effect
      x$MAXMPL ~ b1*x$ATP+c2*x$PCTREAD + c3*x$PCTUPDATE + c4*x$ACTROWPOOL + c5*x$NUMPROCESSORS
    # mediator
      x$ATP ~ a1*NUMPROCESSORS+a2*ACTROWPOOL+a3*NUMPROCESSORS*ACTROWPOOL+a4*PK+a5*PCTUPDATE+a6*PK*PCTUPDATE+a7*PCTREAD+a8*PK*PCTREAD
      x$MAXMPL ~ b1*x$ATP
    # indirect effect 
      ie := a1*b1 + a2*b1 + a3*b1 + a4*b1 + a5*b1 + a6*b1 + a7*b1 + a8*b1 
    # total effect
      total := (b1+c2+c3+c4+c5)+(a1*b1 + a2*b1 + a3*b1 + a4*b1 + a5*b1 + a6*b1 + a7*b1 + a8*b1)'
fit <- sem(thrashing_model, x)
fit <- sem(thrashing_model)
x = read.csv(file="expl.dat",head=TRUE,sep="\t")
library("mediation")
set.seed(2014)
# ATP normalization
# db2
db2 <- subset(x, x$DBMS=='db2')
db2$ATP = (db2$ATP-min(db2$ATP))/(max(db2$ATP)-min(db2$ATP))
db2$MAXMPL = (db2$MAXMPL-min(db2$MAXMPL))/(max(db2$MAXMPL)-min(db2$MAXMPL))
# oracle
oracle <- subset(x, x$DBMS=='oracle')
oracle$ATP = (oracle$ATP-min(oracle$ATP))/(max(oracle$ATP)-min(oracle$ATP))
oracle$MAXMPL = (oracle$MAXMPL-min(oracle$MAXMPL))/(max(oracle$MAXMPL)-min(oracle$MAXMPL))
# pgsql
pgsql <- subset(x, x$DBMS=='pgsql')
pgsql$ATP = (pgsql$ATP-min(pgsql$ATP))/(max(pgsql$ATP)-min(pgsql$ATP))
pgsql$MAXMPL = (pgsql$MAXMPL-min(pgsql$MAXMPL))/(max(pgsql$MAXMPL)-min(pgsql$MAXMPL))
# mysql
mysql <- subset(x, x$DBMS=='mysql')
mysql$ATP = (mysql$ATP-min(mysql$ATP))/(max(mysql$ATP)-min(pgsql$ATP))
mysql$MAXMPL = (mysql$MAXMPL-min(mysql$MAXMPL))/(max(mysql$MAXMPL)-min(mysql$MAXMPL))
# sqlserver
sqlserver <- subset(x, x$DBMS=='sqlserver')
sqlserver$ATP = (sqlserver$ATP-min(sqlserver$ATP))/(max(sqlserver$ATP)-min(sqlserver$ATP))
sqlserver$MAXMPL = (sqlserver$MAXMPL-min(sqlserver$MAXMPL))/(max(sqlserver$MAXMPL)-min(sqlserver$MAXMPL))
x = rbind(db2,oracle,pgsql,mysql,sqlserver) 
x$ACTROWPOOL = (x$ACTROWPOOL-min(x$ACTROWPOOL))/(max(x$ACTROWPOOL)-min(x$ACTROWPOOL))
x$PCTREAD = (x$PCTREAD-min(x$PCTREAD))/(max(x$PCTREAD)-min(x$PCTREAD))
x$PCTUPDATE = (x$PCTUPDATE-min(x$PCTUPDATE))/(max(x$PCTUPDATE)-min(x$PCTUPDATE))
x$NUMPROCESSORS = (x$NUMPROCESSORS-min(x$NUMPROCESSORS))/(max(x$NUMPROCESSORS)-min(x$NUMPROCESSORS))
thrashing_model <- '
    # direct effect
      x$MAXMPL ~ b1*x$ATP+c2*x$PCTREAD + c3*x$PCTUPDATE + c4*x$ACTROWPOOL + c5*x$NUMPROCESSORS
    # mediator
      x$ATP ~ a1*NUMPROCESSORS+a2*ACTROWPOOL+a3*NUMPROCESSORS*ACTROWPOOL+a4*PK+a5*PCTUPDATE+a6*PK*PCTUPDATE+a7*PCTREAD+a8*PK*PCTREAD
      x$MAXMPL ~ b1*x$ATP
    # indirect effect 
      ie := a1*b1 + a2*b1 + a3*b1 + a4*b1 + a5*b1 + a6*b1 + a7*b1 + a8*b1 
    # total effect
      total := (b1+c2+c3+c4+c5)+(a1*b1 + a2*b1 + a3*b1 + a4*b1 + a5*b1 + a6*b1 + a7*b1 + a8*b1)'
thrashing_model <- '
    # direct effect
      MAXMPL ~ b1*ATP+c2*PCTREAD + c3*PCTUPDATE + c4*ACTROWPOOL + c5*NUMPROCESSORS
    # mediator
      ATP ~ a1*NUMPROCESSORS+a2*ACTROWPOOL+a3*NUMPROCESSORS*ACTROWPOOL+a4*PK+a5*PCTUPDATE+a6*PK*PCTUPDATE+a7*PCTREAD+a8*PK*PCTREAD
      MAXMPL ~ b1*ATP
    # indirect effect 
      ie := a1*b1 + a2*b1 + a3*b1 + a4*b1 + a5*b1 + a6*b1 + a7*b1 + a8*b1 
    # total effect
      total := (b1+c2+c3+c4+c5)+(a1*b1 + a2*b1 + a3*b1 + a4*b1 + a5*b1 + a6*b1 + a7*b1 + a8*b1)'
fit <- sem(thrashing_model,data = x)
thrashing_model <- '
    # direct effect
      MAXMPL ~ c2*PCTREAD + c3*PCTUPDATE + c4*ACTROWPOOL + c5*NUMPROCESSORS
    # mediator
      ATP ~ a1*NUMPROCESSORS+a2*ACTROWPOOL+a3*NUMPROCESSORS*ACTROWPOOL+a4*PK+a5*PCTUPDATE+a6*PK*PCTUPDATE+a7*PCTREAD+a8*PK*PCTREAD
      MAXMPL ~ b1*ATP
    # indirect effect 
      ie := a1*b1 + a2*b1 + a3*b1 + a4*b1 + a5*b1 + a6*b1 + a7*b1 + a8*b1 
    # total effect
      total := (b1+c2+c3+c4+c5)+(a1*b1 + a2*b1 + a3*b1 + a4*b1 + a5*b1 + a6*b1 + a7*b1 + a8*b1)'
fit <- sem(thrashing_model,data = x)
thrashing_model <- '
    # direct effect
      MAXMPL ~ c2*PCTREAD + c3*PCTUPDATE + c4*ACTROWPOOL + c5*NUMPROCESSORS
    # moderator
      M1 := NUMPROCESSORS*ACTROWPOOL
      M2 := PK*PCTUPDATE
      M3 := PK*PCTREAD
    # mediator
      ATP ~ a1*NUMPROCESSORS+a2*ACTROWPOOL+a3*M1+a4*PK+a5*PCTUPDATE+a6*M2+a7*PCTREAD+a8*M3
      MAXMPL ~ b1*ATP
    # indirect effect 
      ie := a1*b1 + a2*b1 + a3*b1 + a4*b1 + a5*b1 + a6*b1 + a7*b1 + a8*b1 
    # total effect
      total := (b1+c2+c3+c4+c5)+(a1*b1 + a2*b1 + a3*b1 + a4*b1 + a5*b1 + a6*b1 + a7*b1 + a8*b1)'
fit <- sem(thrashing_model,data = x)
thrashing_model <- '
    # direct effect
      MAXMPL ~ c2*PCTREAD + c3*PCTUPDATE + c4*ACTROWPOOL + c5*NUMPROCESSORS
    # moderator
      M1 =~ NUMPROCESSORS*ACTROWPOOL
      M2 =~ PK*PCTUPDATE
      M3 =~ PK*PCTREAD
    # mediator
      ATP ~ a1*NUMPROCESSORS+a2*ACTROWPOOL+a3*M1+a4*PK+a5*PCTUPDATE+a6*M2+a7*PCTREAD+a8*M3
      MAXMPL ~ b1*ATP
    # indirect effect 
      ie := a1*b1 + a2*b1 + a3*b1 + a4*b1 + a5*b1 + a6*b1 + a7*b1 + a8*b1 
    # total effect
      total := (b1+c2+c3+c4+c5)+(a1*b1 + a2*b1 + a3*b1 + a4*b1 + a5*b1 + a6*b1 + a7*b1 + a8*b1)'
fit <- sem(thrashing_model,data = x)
thrashing_model <- '
    # moderator
    # moderator
      M1 =~ NUMPROCESSORS*ACTROWPOOL
      M2 =~ PK*PCTUPDATE
      M3 =~ PK*PCTREAD
    # mediator
      ATP ~ NUMPROCESSORS+ACTROWPOOL+M1+PK+PCTUPDATE+M2+PCTREAD+M3
    # dependent variable
       MAXMPL ~ ATP + ACTROWPOOL + PCTUPDATE + PCTREAD + NUMPROCESSORS'
fit <- sem(thrashing_model,data = x)
thrashing_model <- '
    # mediator
      ATP ~ NUMPROCESSORS+ACTROWPOOL+PK+PCTUPDATE+PCTREAD
    # dependent variable
      MAXMPL ~ ATP + ACTROWPOOL + PCTUPDATE + PCTREAD + NUMPROCESSORS'
fit <- sem(thrashing_model,data = x)
summary(fit, rsq=T) 
x = read.csv(file="expl.dat",head=TRUE,sep="\t")
library("mediation")
set.seed(2014)
thrashing_model <- '
    # mediator
      ATP ~ NUMPROCESSORS+ACTROWPOOL+PK+PCTUPDATE+PCTREAD
    # dependent variable
      MAXMPL ~ ATP + ACTROWPOOL + PCTUPDATE + PCTREAD + NUMPROCESSORS'
fit <- sem(thrashing_model,data = x)
summary(fit, rsq=T) 
x = read.csv(file="expl.dat",head=TRUE,sep="\t")
library("mediation")
set.seed(2014)
thrashing_model <- '
    # mediator
      ATP ~ NUMPROCESSORS+ACTROWPOOL+PK+PCTUPDATE+PCTREAD
    # dependent variable
      MAXMPL ~ ATP + ACTROWPOOL + PCTUPDATE + PCTREAD + NUMPROCESSORS'
fit <- sem(thrashing_model,data = x)
summary(fit, rsq=T) 
x = read.csv(file="expl.dat",head=TRUE,sep="\t")
library("mediation")
set.seed(2014)
# ATP normalization
# db2
db2 <- subset(x, x$DBMS=='db2')
db2$ATP = (db2$ATP-min(db2$ATP))/(max(db2$ATP)-min(db2$ATP))
db2$MAXMPL = (db2$MAXMPL-min(db2$MAXMPL))/(max(db2$MAXMPL)-min(db2$MAXMPL))
# oracle
oracle <- subset(x, x$DBMS=='oracle')
oracle$ATP = (oracle$ATP-min(oracle$ATP))/(max(oracle$ATP)-min(oracle$ATP))
oracle$MAXMPL = (oracle$MAXMPL-min(oracle$MAXMPL))/(max(oracle$MAXMPL)-min(oracle$MAXMPL))
# pgsql
pgsql <- subset(x, x$DBMS=='pgsql')
pgsql$ATP = (pgsql$ATP-min(pgsql$ATP))/(max(pgsql$ATP)-min(pgsql$ATP))
pgsql$MAXMPL = (pgsql$MAXMPL-min(pgsql$MAXMPL))/(max(pgsql$MAXMPL)-min(pgsql$MAXMPL))
# mysql
mysql <- subset(x, x$DBMS=='mysql')
mysql$ATP = (mysql$ATP-min(mysql$ATP))/(max(mysql$ATP)-min(pgsql$ATP))
mysql$MAXMPL = (mysql$MAXMPL-min(mysql$MAXMPL))/(max(mysql$MAXMPL)-min(mysql$MAXMPL))
# sqlserver
sqlserver <- subset(x, x$DBMS=='sqlserver')
sqlserver$ATP = (sqlserver$ATP-min(sqlserver$ATP))/(max(sqlserver$ATP)-min(sqlserver$ATP))
sqlserver$MAXMPL = (sqlserver$MAXMPL-min(sqlserver$MAXMPL))/(max(sqlserver$MAXMPL)-min(sqlserver$MAXMPL))
x = rbind(db2,oracle,pgsql,mysql,sqlserver) 
x$ACTROWPOOL = (x$ACTROWPOOL-min(x$ACTROWPOOL))/(max(x$ACTROWPOOL)-min(x$ACTROWPOOL))
x$PCTREAD = (x$PCTREAD-min(x$PCTREAD))/(max(x$PCTREAD)-min(x$PCTREAD))
x$PCTUPDATE = (x$PCTUPDATE-min(x$PCTUPDATE))/(max(x$PCTUPDATE)-min(x$PCTUPDATE))
x$NUMPROCESSORS = (x$NUMPROCESSORS-min(x$NUMPROCESSORS))/(max(x$NUMPROCESSORS)-min(x$NUMPROCESSORS))
thrashing_model <- '
    # mediator
      ATP ~ NUMPROCESSORS+ACTROWPOOL+PK+PCTUPDATE+PCTREAD
    # dependent variable
      MAXMPL ~ ATP + ACTROWPOOL + PCTUPDATE + PCTREAD + NUMPROCESSORS'
fit <- sem(thrashing_model,data = x)
summary(fit, rsq=T) 
x = read.csv(file="expl.dat",head=TRUE,sep="\t")
library("mediation")
set.seed(2014)
# ATP normalization
# db2
db2 <- subset(x, x$DBMS=='db2')
db2$ATP = (db2$ATP-min(db2$ATP))/(max(db2$ATP)-min(db2$ATP))
#db2$MAXMPL = (db2$MAXMPL-min(db2$MAXMPL))/(max(db2$MAXMPL)-min(db2$MAXMPL))
# oracle
oracle <- subset(x, x$DBMS=='oracle')
oracle$ATP = (oracle$ATP-min(oracle$ATP))/(max(oracle$ATP)-min(oracle$ATP))
#oracle$MAXMPL = (oracle$MAXMPL-min(oracle$MAXMPL))/(max(oracle$MAXMPL)-min(oracle$MAXMPL))
# pgsql
pgsql <- subset(x, x$DBMS=='pgsql')
pgsql$ATP = (pgsql$ATP-min(pgsql$ATP))/(max(pgsql$ATP)-min(pgsql$ATP))
#pgsql$MAXMPL = (pgsql$MAXMPL-min(pgsql$MAXMPL))/(max(pgsql$MAXMPL)-min(pgsql$MAXMPL))
# mysql
mysql <- subset(x, x$DBMS=='mysql')
mysql$ATP = (mysql$ATP-min(mysql$ATP))/(max(mysql$ATP)-min(pgsql$ATP))
#mysql$MAXMPL = (mysql$MAXMPL-min(mysql$MAXMPL))/(max(mysql$MAXMPL)-min(mysql$MAXMPL))
# sqlserver
sqlserver <- subset(x, x$DBMS=='sqlserver')
sqlserver$ATP = (sqlserver$ATP-min(sqlserver$ATP))/(max(sqlserver$ATP)-min(sqlserver$ATP))
#sqlserver$MAXMPL = (sqlserver$MAXMPL-min(sqlserver$MAXMPL))/(max(sqlserver$MAXMPL)-min(sqlserver$MAXMPL))
x = rbind(db2,oracle,pgsql,mysql,sqlserver) 
x$ACTROWPOOL = (x$ACTROWPOOL-min(x$ACTROWPOOL))/(max(x$ACTROWPOOL)-min(x$ACTROWPOOL))
x$PCTREAD = (x$PCTREAD-min(x$PCTREAD))/(max(x$PCTREAD)-min(x$PCTREAD))
x$PCTUPDATE = (x$PCTUPDATE-min(x$PCTUPDATE))/(max(x$PCTUPDATE)-min(x$PCTUPDATE))
x$NUMPROCESSORS = (x$NUMPROCESSORS-min(x$NUMPROCESSORS))/(max(x$NUMPROCESSORS)-min(x$NUMPROCESSORS))
thrashing_model <- '
    # mediator
      ATP ~ NUMPROCESSORS+ACTROWPOOL+PK+PCTUPDATE+PCTREAD
    # dependent variable
      MAXMPL ~ ATP + ACTROWPOOL + PCTUPDATE + PCTREAD + NUMPROCESSORS'
fit <- sem(thrashing_model,data = x)
summary(fit, rsq=T) 
thrashing_model <- '
    # moderator
     M1 =~ NUMPROCESSORS*ACTROWPOOL
      M2 =~ PK*PCTUPDATE
      M3 =~ PK*PCTREAD
    # mediator
      ATP ~ NUMPROCESSORS+ACTROWPOOL+PK+PCTUPDATE+PCTREAD+M1+M2+M3
    # dependent variable
      MAXMPL ~ ATP + ACTROWPOOL + PCTUPDATE + PCTREAD + NUMPROCESSORS'
fit <- sem(thrashing_model,data = x)
summary(fit, rsq=T) 
thrashing_model <- '
    # moderator
      ATP =~ NUMPROCESSORS+ACTROWPOOL+PK+PCTUPDATE+PCTREAD
      MAXMPL =~ ATP + ACTROWPOOL + PCTUPDATE + PCTREAD + NUMPROCESSORS
    # mediator
      ATP ~ NUMPROCESSORS+ACTROWPOOL+PK+PCTUPDATE+PCTREAD
    # dependent variable
      MAXMPL ~ ATP + ACTROWPOOL + PCTUPDATE + PCTREAD + NUMPROCESSORS'
fit <- sem(thrashing_model,data = x)
summary(fit, rsq=T) 
thrashing_model <- '
    # latent variable
      ATP =~ NUMPROCESSORS+ACTROWPOOL+PK+PCTUPDATE+PCTREAD
      MAXMPL =~ ATP + ACTROWPOOL + PCTUPDATE + PCTREAD + NUMPROCESSORS
    # mediator
      $ATP ~ NUMPROCESSORS+ACTROWPOOL+PK+PCTUPDATE+PCTREAD
    # dependent variable
      #MAXMPL ~ ATP + ACTROWPOOL + PCTUPDATE + PCTREAD + NUMPROCESSORS'
fit <- sem(thrashing_model,data = x)
summary(fit, rsq=T) 
thrashing_model <- '
    # latent variable
      ATP =~ NUMPROCESSORS+ACTROWPOOL+PK+PCTUPDATE+PCTREAD
      MAXMPL =~ ATP + ACTROWPOOL + PCTUPDATE + PCTREAD + NUMPROCESSORS
    # mediator
      #ATP ~ NUMPROCESSORS+ACTROWPOOL+PK+PCTUPDATE+PCTREAD
    # dependent variable
      #MAXMPL ~ ATP + ACTROWPOOL + PCTUPDATE + PCTREAD + NUMPROCESSORS'
fit <- sem(thrashing_model,data = x)
summary(fit, rsq=T) 
thrashing_model <- '
    # latent variable
    #  ATP =~ NUMPROCESSORS+ACTROWPOOL+PK+PCTUPDATE+PCTREAD
    #  MAXMPL =~ ATP + ACTROWPOOL + PCTUPDATE + PCTREAD + NUMPROCESSORS
    # mediator
      ATP ~ NUMPROCESSORS+ACTROWPOOL+PK+PCTUPDATE+PCTREAD
    # dependent variable
      MAXMPL ~ ATP + ACTROWPOOL + PCTUPDATE + PCTREAD + NUMPROCESSORS'
fit <- sem(thrashing_model,data = x)
summary(fit, standardized=TRUE, rsq=T) 
x = read.csv(file="expl.dat",head=TRUE,sep="\t")
library("mediation")
set.seed(2014)
# ATP normalization
# db2
db2 <- subset(x, x$DBMS=='db2')
db2$ATP = (db2$ATP-min(db2$ATP))/(max(db2$ATP)-min(db2$ATP))
db2$MAXMPL = (db2$MAXMPL-min(db2$MAXMPL))/(max(db2$MAXMPL)-min(db2$MAXMPL))
# oracle
oracle <- subset(x, x$DBMS=='oracle')
oracle$ATP = (oracle$ATP-min(oracle$ATP))/(max(oracle$ATP)-min(oracle$ATP))
oracle$MAXMPL = (oracle$MAXMPL-min(oracle$MAXMPL))/(max(oracle$MAXMPL)-min(oracle$MAXMPL))
# pgsql
pgsql <- subset(x, x$DBMS=='pgsql')
pgsql$ATP = (pgsql$ATP-min(pgsql$ATP))/(max(pgsql$ATP)-min(pgsql$ATP))
pgsql$MAXMPL = (pgsql$MAXMPL-min(pgsql$MAXMPL))/(max(pgsql$MAXMPL)-min(pgsql$MAXMPL))
# mysql
mysql <- subset(x, x$DBMS=='mysql')
mysql$ATP = (mysql$ATP-min(mysql$ATP))/(max(mysql$ATP)-min(pgsql$ATP))
mysql$MAXMPL = (mysql$MAXMPL-min(mysql$MAXMPL))/(max(mysql$MAXMPL)-min(mysql$MAXMPL))
# sqlserver
sqlserver <- subset(x, x$DBMS=='sqlserver')
sqlserver$ATP = (sqlserver$ATP-min(sqlserver$ATP))/(max(sqlserver$ATP)-min(sqlserver$ATP))
sqlserver$MAXMPL = (sqlserver$MAXMPL-min(sqlserver$MAXMPL))/(max(sqlserver$MAXMPL)-min(sqlserver$MAXMPL))
x = rbind(db2,oracle,pgsql,mysql,sqlserver) 
x$ACTROWPOOL = (x$ACTROWPOOL-min(x$ACTROWPOOL))/(max(x$ACTROWPOOL)-min(x$ACTROWPOOL))
x$PCTREAD = (x$PCTREAD-min(x$PCTREAD))/(max(x$PCTREAD)-min(x$PCTREAD))
x$PCTUPDATE = (x$PCTUPDATE-min(x$PCTUPDATE))/(max(x$PCTUPDATE)-min(x$PCTUPDATE))
x$NUMPROCESSORS = (x$NUMPROCESSORS-min(x$NUMPROCESSORS))/(max(x$NUMPROCESSORS)-min(x$NUMPROCESSORS))
thrashing_model <- '
    # latent variable
    #  ATP =~ NUMPROCESSORS+ACTROWPOOL+PK+PCTUPDATE+PCTREAD
    #  MAXMPL =~ ATP + ACTROWPOOL + PCTUPDATE + PCTREAD + NUMPROCESSORS
    # mediator
      ATP ~ NUMPROCESSORS+ACTROWPOOL+PK+PCTUPDATE+PCTREAD
    # dependent variable
      MAXMPL ~ ATP + ACTROWPOOL + PCTUPDATE + PCTREAD + NUMPROCESSORS'
fit <- sem(thrashing_model,data = x)
summary(fit, standardized=TRUE, rsq=T) 
standardizedCoefficients(fit)
thrashing_model <- '
    # latent variable
      ATP =~ NUMPROCESSORS+ACTROWPOOL+PK+PCTUPDATE+PCTREAD
      MAXMPL =~ ATP + ACTROWPOOL + PCTUPDATE + PCTREAD + NUMPROCESSORS
    # mediator
      ATP ~ NUMPROCESSORS+ACTROWPOOL+PK+PCTUPDATE+PCTREAD
    # dependent variable
      MAXMPL ~ ATP + ACTROWPOOL + PCTUPDATE + PCTREAD + NUMPROCESSORS'
fit <- sem(thrashing_model,data = x)
summary(fit, standardized=TRUE, rsq=T) 
thrashing_model <- '
    # latent variable
      ATP =~ NUMPROCESSORS+ACTROWPOOL+PK+PCTUPDATE+PCTREAD
      MAXMPL =~ ATP + ACTROWPOOL + PCTUPDATE + PCTREAD + NUMPROCESSORS
    # mediator
      ATP ~ NUMPROCESSORS+ACTROWPOOL+PK+PCTUPDATE+PCTREAD
    # dependent variable
      MAXMPL ~ ATP + ACTROWPOOL + PCTUPDATE + PCTREAD + NUMPROCESSORS'
fit <- sem(thrashing_model,data = x)
summary(fit, standardized=TRUE, rsq=T) 
med.fit <- lm(ATP ~ NUMPROCESSORS+ACTROWPOOL+NUMPROCESSORS*ACTROWPOOL+PK+PCTUPDATE+PK*PCTUPDATE+PCTREAD+PK*PCTREAD, data = x)
out.fit <- lm(MAXMPL ~ ATP + PCTREAD + PCTUPDATE + ACTROWPOOL + NUMPROCESSORS, data = x)
library(mediation)
med.out <- mediate(med.fit, out.fit, mediator = "ATP", treat = "NUMPROCESSORS")
summary(med.out)
thrashing_model <- '
    # latent variable
      ATP =~ NUMPROCESSORS+ACTROWPOOL+PK+PCTUPDATE+PCTREAD
      MAXMPL =~ ATP + ACTROWPOOL + PCTUPDATE + PCTREAD + NUMPROCESSORS
    # mediator
      ATP ~ NUMPROCESSORS+ACTROWPOOL+PK+PCTUPDATE+PCTREAD
    # dependent variable
      MAXMPL ~ ATP + ACTROWPOOL + PCTUPDATE + PCTREAD + NUMPROCESSORS'
fit <- sem(thrashing_model,data = x)
summary(fit, standardized=TRUE, rsq=T) 
x = read.csv(file="expl.dat",head=TRUE,sep="\t")
library("mediation")
set.seed(2014)
thrashing_model <- '
    # latent variable
     # ATP =~ NUMPROCESSORS+ACTROWPOOL+PK+PCTUPDATE+PCTREAD
     # MAXMPL =~ ATP + ACTROWPOOL + PCTUPDATE + PCTREAD + NUMPROCESSORS
    # mediator
      ATP ~ NUMPROCESSORS+ACTROWPOOL+PK+PCTUPDATE+PCTREAD
    # dependent variable
      MAXMPL ~ ATP + ACTROWPOOL + PCTUPDATE + PCTREAD + NUMPROCESSORS'
fit <- sem(thrashing_model,data = x)
summary(fit, standardized=TRUE, rsq=T) 
quit
quit()
