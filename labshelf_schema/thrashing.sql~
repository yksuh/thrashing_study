-- Writer: Young-Kyoon Suh (yksuh@cs.arizona.edu)
-- Date: 04/06/14
-- Description: Define tables for DBMS thrashing study

-- Define a BatchSet
DROP TABLE AZDBLAB_BATCHSET CASCADE CONSTRAINTS;
CREATE TABLE AZDBLAB_BATCHSET(
	BATCHSETID NUMBER(10) NOT NULL PRIMARY KEY,
	RUNID NUMBER(10) NOT NULL,
	BATCHSETNUMBER NUMBER(10) NOT NULL,
	WASTHRASHED NUMBER(10),
	FOREIGN KEY (RUNID) REFERENCES AZDBLAB_EXPERIMENTRUN(RUNID) ON DELETE	CASCADE,
	UNIQUE(RUNID, BATCHSETNUMBER)
);

-- Record a pair of parameter and value for a BatchSet
-- param name: numCores, BuffCacheSz, EfctDBSz, XactSz, WriteLockRatio, BatchSzIncr, RunDuration
DROP TABLE AZDBLAB_BATCHSETHASPARAMETER CASCADE CONSTRAINTS;
CREATE TABLE AZDBLAB_BATCHSETHASPARAMETER(
	BATCHSETID NUMBER(10) NOT NULL,
	PARAMNAME VARCHAR2(30) NOT NULL UNIQUE,
	VALUE NUMBER(10) NOT NULL,
	FOREIGN KEY (BATCHSETID) REFERENCES AZDBLAB_BATCHSET(BATCHSETID) ON DELETE CASCADE,
	PRIMARY KEY (BATCHSETID, PARAMNAME)
);

-- Record a batch
DROP TABLE AZDBLAB_BATCH CASCADE CONSTRAINTS;
CREATE TABLE AZDBLAB_BATCH(
	BATCHID NUMBER(10) NOT NULL PRIMARY KEY,
	BATCHSETID NUMBER(10) NOT NULL,
	MPL NUMBER(10) NOT NULL,
	ITERNUM NUMBER(10) NOT NULL,
	SUMEXECUTEDXACTS NUMBER(10),
	FOREIGN KEY (BATCHSETID) REFERENCES AZDBLAB_BATCHSET(BATCHSETID) ON DELETE CASCADE,
	UNIQUE (BATCHSETID, MPL, ITERNUM)
);

-- Record a batch aspect
DROP TABLE AZDBLAB_BATCHSATISFIESASPECT CASCADE CONSTRAINTS;
CREATE TABLE AZDBLAB_BATCHSATISFIESASPECT(
	BATCHSETID NUMBER(10) NOT NULL,
	ASPECTID NUMBER(10) NOT NULL,
	ASPECTVALUE NUMBER(10) NOT NULL,
	FOREIGN KEY (BATCHSETID) REFERENCES AZDBLAB_BATCHSET(BATCHSETID) ON DELETE CASCADE,
	FOREIGN KEY (ASPECTID) REFERENCES AZDBLAB_DEFINEDASPECT(ASPECTID) ON DELETE CASCADE,
	PRIMARY KEY (BATCHSETID, ASPECTID)
);

-- Record a client
DROP TABLE AZDBLAB_CLIENT CASCADE CONSTRAINTS;
CREATE TABLE AZDBLAB_CLIENT(
	CLIENTID NUMBER(10) NOT NULL PRIMARY KEY,
	BATCHID NUMBER(10) NOT NULL,
	CLIENTNUMBER NUMBER(10) NOT NULL,
	NUMEXECUTEDXACTS NUMBER(10),
	FOREIGN KEY (BATCHID) REFERENCES AZDBLAB_BATCH(BATCHID) ON DELETE CASCADE,
	UNIQUE (BATCHID, CLIENTNUMBER)
);

-- Record a transaction
DROP TABLE AZDBLAB_TRANSACTION CASCADE CONSTRAINTS;
CREATE TABLE AZDBLAB_TRANSACTION(
	XACTID NUMBER(10) NOT NULL PRIMARY KEY,
	CLIENTID NUMBER(10) NOT NULL,
	XACTNUMBER NUMBER(10) NOT NULL,
	NUMSTATEMENTS NUMBER(10) NOT NULL,
	FOREIGN KEY (CLIENTID) REFERENCES AZDBLAB_CLIENT(CLIENTID) ON DELETE CASCADE,
	UNIQUE (CLIENTID, XACTNUMBER)
);

-- Record a statement
DROP TABLE AZDBLAB_STATEMENT CASCADE CONSTRAINTS;
CREATE TABLE AZDBLAB_STATEMENT(
	XACTID NUMBER(10) NOT NULL,
	STATEMENTNUMBER NUMBER(10) NOT NULL,
	STATEMENTSQL VARCHAR2(2000) NOT NULL,
	FOREIGN KEY (XACTID) REFERENCES AZDBLAB_TRANSACTION(XACTID) ON DELETE CASCADE,
	PRIMARY KEY (XACTID, STATEMENTNUMBER)
);


-- AZDBLAB_EXPERIMENTRUNSTAT: store statistics 
--CREATE TABLE AZDBLAB_EXPERIMENTRUNSTAT(
--	RUNID NUMBER(10) NOT NULL PRIMARY KEY, -- runID indicates a batch (?)
	-- ABORTRATE NUMBER(10), 
	-- BLOCKRATE NUMBER(10), 
--	NUMCORES NUMBER(10),	-- number of cores
--	BUFFSIZE NUMBER(10),	-- DBMS buffer size
--	ISOLEVEL VARCHAR(30),	-- isolation level
--	MPL 	 NUMBER(10),	-- multi-programming level (can be computed from AZDBLAB_TERMINAL)
--	TRANSACTIONSIZE NUMBER(10,2),	-- transaction size: number of lock requests per transaction, represented by ratio
--	HOTSPOTRATIO NUMBER(10,2),	-- hot spot ratio
--	DURATION NUMBER(10,2),		-- total duration for this run
--	TPS 	 NUMBER(10),	-- Can be computed by # of total xacts / # of terminals / duration
--	FOREIGN KEY (RUNID) REFERENCES AZDBLAB_EXPERIMENTRUN(RUNID) ON DELETE CASCADE
--);

-- AZDBLAB_EXPERIMENTRUNSTAT: store statistics 
--CREATE TABLE AZDBLAB_XACTRUNSTAT(
--	RUNID NUMBER(10) NOT NULL, -- runID indicates a batch (?)
--	NUMCORES NUMBER(10),	-- number of cores
--	MPL 	 NUMBER(10),	-- multi-programming level (can be computed from AZDBLAB_TERMINAL)
--	DURATION NUMBER(10,2),		-- total duration for this run
--	NUMEXECUTEDXACTS NUMBER(10),	-- transactions 
--	PRIMARY KEY (RUNID, NUMCORES, MPL) REFERENCES AZDBLAB_EXPERIMENTRUN(RUNID) ON DELETE CASCADE
--	FOREIGN KEY (RUNID) REFERENCES AZDBLAB_EXPERIMENTRUN(RUNID) ON DELETE CASCADE
--);
