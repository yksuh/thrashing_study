-- Writer: Young-Kyoon Suh (yksuh@cs.arizona.edu)
-- Date: 04/06/14
-- Description: Define tables for DBMS thrashing study

DROP TABLE AZDBLAB_BATCHSETHASPARAMETER CASCADE CONSTRAINTS;
CREATE TABLE AZDBLAB_BATCHSETHASPARAMETER(
	BATCHSETID 	     	NUMBER(10) NOT NULL PRIMARY KEY (BATCHSETID),
	DBMSBufferCacheSize 	NUMBER(10,2) NOT NULL,
	NumCores	 	NUMBER(10) NOT NULL,
	BatchSizeIncrement 	NUMBER(10) NOT NULL,
	Duration 		NUMBER(10) NOT NULL,
	TransactionSize      	NUMBER(10,2) NOT NULL,
	ExclusiveLockRatio 	NUMBER(10,4) NOT NULL,
	EffectiveDBRatio 	NUMBER(10,2) NOT NULL,
	LockWaitTime 		NUMBER(10),
	WasThrashed 		NUMBER(10),
	FOREIGN KEY (BATCHSETID) REFERENCES AZDBLAB_BATCHSET(BATCHSETID) ON DELETE CASCADE
);

-- Define a BatchSet
DROP TABLE AZDBLAB_BATCHSET CASCADE CONSTRAINTS;
CREATE TABLE AZDBLAB_BATCHSET(
	BATCHSETID NUMBER(10) NOT NULL PRIMARY KEY,
	RUNID NUMBER(10) NOT NULL,
	BATCHSETNUM NUMBER(10) NOT NULL,
	FOREIGN KEY (RUNID) REFERENCES AZDBLAB_EXPERIMENTRUN(RUNID) ON DELETE CASCADE,
	UNIQUE(RUNID, BATCHSETNUM)
);

-- Define a BatchSet
DROP TABLE AZDBLAB_COMPLETEDFGTASK CASCADE CONSTRAINTS;
CREATE TABLE AZDBLAB_COMPLETEDFGTASK(
	BATCHSETID NUMBER(10) NOT NULL PRIMARY KEY,
	TASKNUM NUMBER(10) NOT NULL,
	FOREIGN KEY (BATCHSETID) REFERENCES AZDBLAB_BATCHSET(BATCHSETID) ON DELETE CASCADE,
	PRIMARY KEY(BATCHSETID, TASKNUM)
);

-- Record a pair of parameter and value for a BatchSet
-- param name: numCores, BuffCacheSz, EfctDBSz, XactSz, WriteLockRatio, BatchSzIncr, RunDuration
DROP TABLE AZDBLAB_BATCHSETHASPARAMETER CASCADE CONSTRAINTS;
CREATE TABLE AZDBLAB_BATCHSETHASPARAMETER(
	BATCHSETID 	     	NUMBER(10) NOT NULL PRIMARY KEY (BATCHSETID),
	DBMSBufferCacheSize 	NUMBER(10,2) NOT NULL,
	NumCores	 	NUMBER(10) NOT NULL,
	BatchSizeIncrement 	NUMBER(10) NOT NULL,
	Duration 		NUMBER(10) NOT NULL,
	TransactionSize      	NUMBER(10,2) NOT NULL,
	ExclusiveLockRatio 	NUMBER(10,4) NOT NULL,
	EffectiveDBRatio 	NUMBER(10,2) NOT NULL,
	LockWaitTime 		NUMBER(10),
	WasThrashed 		NUMBER(10),
	FOREIGN KEY (BATCHSETID) REFERENCES AZDBLAB_BATCHSET(BATCHSETID) ON DELETE CASCADE
);

-- Record a batchsetsatisfiesaspect
DROP TABLE AZDBLAB_BSSATISFIESASPECT CASCADE CONSTRAINTS;
CREATE TABLE AZDBLAB_BSSATISFIESASPECT(
	BATCHSETID NUMBER(10) NOT NULL,
	ASPECTID NUMBER(10) NOT NULL,
	ASPECTVALUE NUMBER(10) NOT NULL,
	FOREIGN KEY (BATCHSETID) REFERENCES AZDBLAB_BATCHSET(BATCHSETID) ON DELETE CASCADE,
	FOREIGN KEY (ASPECTID) REFERENCES AZDBLAB_DEFINEDASPECT(ASPECTID) ON DELETE CASCADE,
	PRIMARY KEY (BATCHSETID, ASPECTID)
);

-- Record a batch
DROP TABLE AZDBLAB_BATCH CASCADE CONSTRAINTS;
CREATE TABLE AZDBLAB_BATCH(
	BATCHID NUMBER(10) NOT NULL PRIMARY KEY,
	BATCHSETID NUMBER(10) NOT NULL,
	MPL NUMBER(10) NOT NULL, -- batch number
	FOREIGN KEY (BATCHSETID) REFERENCES AZDBLAB_BATCHSET(BATCHSETID) ON DELETE CASCADE,
	UNIQUE (BATCHSETID, MPL)
);

-- Record a batchhasresult record
DROP TABLE AZDBLAB_BATCHHASRESULT CASCADE CONSTRAINTS;
CREATE TABLE AZDBLAB_BATCH(
	BATCHID NUMBER(10) NOT NULL,
	ITERNUM NUMBER(10) NOT NULL,
	SUMEXECUTEDXACTS NUMBER(10) NOT NULL,
	elapsedTime NUMBER(10) NOT NULL, -- msec
	FOREIGN KEY (BATCHID) REFERENCES AZDBLAB_BATCH(BATCHID) ON DELETE CASCADE,
	PRIMARY KEY (BATCHID, ITERNUM)
);


-- Record a client
DROP TABLE AZDBLAB_CLIENT CASCADE CONSTRAINTS;
CREATE TABLE AZDBLAB_CLIENT(
	CLIENTID NUMBER(10) NOT NULL PRIMARY KEY,
	BATCHID NUMBER(10) NOT NULL,
	CLIENTNUM NUMBER(10) NOT NULL,
	FOREIGN KEY (BATCHID) REFERENCES AZDBLAB_BATCH(BATCHID) ON DELETE CASCADE,
	UNIQUE (BATCHID, CLIENTNUM)
);

-- Record a client's result
DROP TABLE AZDBLAB_CLIENTHASRESULT CASCADE CONSTRAINTS;
CREATE TABLE AZDBLAB_CLIENT(
	CLIENTID NUMBER(10) NOT NULL,
	ITERNUM NUMBER(10)  NOT NULL,
	NUMEXECUTEDXACTS NUMBER(10)  NOT NULL,
	FOREIGN KEY (CLIENTID) REFERENCES AZDBLAB_BATCH(CLIENTID) ON DELETE CASCADE,
	PRIMARY KEY(CLIENTID, ITERNUM)
);

-- Record a transaction
DROP TABLE AZDBLAB_TRANSACTION CASCADE CONSTRAINTS;
CREATE TABLE AZDBLAB_TRANSACTION(
	XACTID NUMBER(10) NOT NULL PRIMARY KEY,
	CLIENTID NUMBER(10) NOT NULL,
	XACTNUM NUMBER(10) NOT NULL,
	FOREIGN KEY (CLIENTID) REFERENCES AZDBLAB_CLIENT(CLIENTID) ON DELETE CASCADE,
	UNIQUE (CLIENTID, XACTNUM)
);

-- Record a statement
DROP TABLE AZDBLAB_STATEMENT CASCADE CONSTRAINTS;
CREATE TABLE AZDBLAB_STATEMENT(
	STMTID NUMBER(10) NOT NULL PRIMARY KEY,
	XACTID NUMBER(10) NOT NULL,
	STMTNUM NUMBER(10) NOT NULL,
	STMTSQL VARCHAR2(2000) NOT NULL,
	FOREIGN KEY (XACTID) REFERENCES AZDBLAB_TRANSACTION(XACTID) ON DELETE CASCADE,
	UNIQUE (XACTID, STMTNUM)
);

-- old schema

-- AZDBLAB_EXPERIMENTRUNSTAT: store statistics 
--CREATE TABLE AZDBLAB_EXPERIMENTRUNSTAT(
--	RUNID NUMBER(10) NOT NULL PRIMARY KEY, -- runID indicates a batch (?)
	-- ABORTRATE NUMBER(10), 
	-- BLOCKRATE NUMBER(10), 
--	NUMCORES NUMBER(10),	-- number of cores
--	BUFFSIZE NUMBER(10),	-- DBMS buffer size
--	ISOLEVEL VARCHAR(30),	-- isolation level
--	MPL 	 NUMBER(10),	-- multi-programming level (can be computed from AZDBLAB_TERMINAL)
--	TRANSACTIONSIZE NUMBER(10,2),	-- transaction size: number of lock requests per transaction, represented by ratio
--	HOTSPOTRATIO NUMBER(10,2),	-- hot spot ratio
--	DURATION NUMBER(10,2),		-- total duration for this run
--	TPS 	 NUMBER(10),	-- Can be computed by # of total xacts / # of terminals / duration
--	FOREIGN KEY (RUNID) REFERENCES AZDBLAB_EXPERIMENTRUN(RUNID) ON DELETE CASCADE
--);

-- AZDBLAB_EXPERIMENTRUNSTAT: store statistics 
--CREATE TABLE AZDBLAB_XACTRUNSTAT(
--	RUNID NUMBER(10) NOT NULL, -- runID indicates a batch (?)
--	NUMCORES NUMBER(10),	-- number of cores
--	MPL 	 NUMBER(10),	-- multi-programming level (can be computed from AZDBLAB_TERMINAL)
--	DURATION NUMBER(10,2),		-- total duration for this run
--	NUMEXECUTEDXACTS NUMBER(10),	-- transactions 
--	PRIMARY KEY (RUNID, NUMCORES, MPL) REFERENCES AZDBLAB_EXPERIMENTRUN(RUNID) ON DELETE CASCADE
--	FOREIGN KEY (RUNID) REFERENCES AZDBLAB_EXPERIMENTRUN(RUNID) ON DELETE CASCADE
--);
