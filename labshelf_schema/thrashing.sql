-- Writer: Young-Kyoon Suh (yksuh@cs.arizona.edu)
-- Date: 04/19/14
-- Description: Define tables for DBMS thrashing study

-- Define a BatchSet
DROP TABLE AZDBLAB_BATCHSET CASCADE CONSTRAINTS;
CREATE TABLE AZDBLAB_BATCHSET(
	BATCHSETID NUMBER(10) NOT NULL PRIMARY KEY,
	RUNID NUMBER(10) NOT NULL,
	BATCHSETNUM NUMBER(10) NOT NULL,
	FOREIGN KEY (RUNID) REFERENCES AZDBLAB_EXPERIMENTRUN(RUNID) ON DELETE CASCADE,
	UNIQUE(RUNID, BATCHSETNUM)
);

DROP TABLE AZDBLAB_BATCHSETHASPARAMETER CASCADE CONSTRAINTS;
CREATE TABLE AZDBLAB_BATCHSETHASPARAMETER(
	BATCHSETID 	     	NUMBER(10) NOT NULL PRIMARY KEY,
	BufferCacheSize 	NUMBER(10,2) NOT NULL,
	NumCores	 	NUMBER(10) NOT NULL,
	BatchSizeIncrement 	NUMBER(10) NOT NULL,
	Duration 		NUMBER(10) NOT NULL,
	TransactionSize      	NUMBER(10,2) NOT NULL,--# of shared lock requests
	ExclusiveLockRatio 	NUMBER(10,4) NOT NULL,--# of write lock requests
	EffectiveDBRatio 	NUMBER(10,2) NOT NULL,--data access range
	LockWaitTime 		NUMBER(10),
	WasThrashed 		NUMBER(10),
	FOREIGN KEY (BATCHSETID) REFERENCES AZDBLAB_BATCHSET(BATCHSETID) ON DELETE CASCADE
);


-- Defined a completed task within a batchset (not used)
DROP TABLE AZDBLAB_COMPLETEDFGTASK CASCADE CONSTRAINTS;
CREATE TABLE AZDBLAB_COMPLETEDFGTASK(
	BATCHSETID NUMBER(10) NOT NULL,
	TASKNUM NUMBER(10) NOT NULL,
	TRANSACTIONTIME VARCHAR(100) NOT NULL,
	FOREIGN KEY (BATCHSETID) REFERENCES AZDBLAB_BATCHSET(BATCHSETID) ON DELETE CASCADE,
	PRIMARY KEY(BATCHSETID, TASKNUM)
);


-- Record a batchsetsatisfiesaspect
DROP TABLE AZDBLAB_BSSATISFIESASPECT CASCADE CONSTRAINTS;
CREATE TABLE AZDBLAB_BSSATISFIESASPECT(
	BATCHSETID NUMBER(10) NOT NULL,
	ASPECTID NUMBER(10) NOT NULL,
	ASPECTVALUE NUMBER(10) NOT NULL,
	FOREIGN KEY (BATCHSETID) REFERENCES AZDBLAB_BATCHSET(BATCHSETID) ON DELETE CASCADE,
	FOREIGN KEY (ASPECTID) REFERENCES AZDBLAB_DEFINEDASPECT(ASPECTID) ON DELETE CASCADE,
	PRIMARY KEY (BATCHSETID, ASPECTID)
);

-- Record a batch
DROP TABLE AZDBLAB_BATCH CASCADE CONSTRAINTS;
CREATE TABLE AZDBLAB_BATCH(
	BATCHID NUMBER(10) NOT NULL PRIMARY KEY,
	BATCHSETID NUMBER(10) NOT NULL,
	MPL NUMBER(10) NOT NULL, -- batch number
	FOREIGN KEY (BATCHSETID) REFERENCES AZDBLAB_BATCHSET(BATCHSETID) ON DELETE CASCADE,
	UNIQUE (BATCHSETID, MPL)
);

-- Record a client
DROP TABLE AZDBLAB_CLIENT CASCADE CONSTRAINTS;
CREATE TABLE AZDBLAB_CLIENT(
	CLIENTID NUMBER(10) NOT NULL PRIMARY KEY,
	BATCHID NUMBER(10) NOT NULL,
	CLIENTNUM NUMBER(10) NOT NULL,
	FOREIGN KEY (BATCHID) REFERENCES AZDBLAB_BATCH(BATCHID) ON DELETE CASCADE,
	UNIQUE (BATCHID, CLIENTNUM)
);

-- Record a transaction
DROP TABLE AZDBLAB_TRANSACTION CASCADE CONSTRAINTS;
CREATE TABLE AZDBLAB_TRANSACTION(
	XACTID NUMBER(10) NOT NULL PRIMARY KEY,
	CLIENTID NUMBER(10) NOT NULL,
	XACTNUM NUMBER(10) NOT NULL,
	FOREIGN KEY (CLIENTID) REFERENCES AZDBLAB_CLIENT(CLIENTID) ON DELETE CASCADE,
	UNIQUE (CLIENTID, XACTNUM)
);

-- Record a statement
DROP TABLE AZDBLAB_STATEMENT CASCADE CONSTRAINTS;
CREATE TABLE AZDBLAB_STATEMENT(
	STMTID NUMBER(10) NOT NULL PRIMARY KEY,
	XACTID NUMBER(10) NOT NULL,
	STMTNUM NUMBER(10) NOT NULL,
	STMTSQL VARCHAR2(2000) NOT NULL,
	FOREIGN KEY (XACTID) REFERENCES AZDBLAB_TRANSACTION(XACTID) ON DELETE CASCADE,
	UNIQUE (XACTID, STMTNUM)
);

-- Record a batchhasresult record
DROP TABLE AZDBLAB_BATCHHASRESULT CASCADE CONSTRAINTS;
CREATE TABLE AZDBLAB_BATCHHASRESULT(
	BATCHID NUMBER(10) NOT NULL,
	ITERNUM NUMBER(10) NOT NULL,
	SUMEXECUTEDXACTS NUMBER(10) NOT NULL,
	elapsedTime NUMBER(10) NOT NULL, -- msec
	FOREIGN KEY (BATCHID) REFERENCES AZDBLAB_BATCH(BATCHID) ON DELETE CASCADE,
	PRIMARY KEY (BATCHID, ITERNUM)
);

-- Record a client's result
DROP TABLE AZDBLAB_CLIENTHASRESULT CASCADE CONSTRAINTS;
CREATE TABLE AZDBLAB_CLIENTHASRESULT(
	CLIRESID NUMBER(10) NOT NULL PRIMARY KEY,
	CLIENTID NUMBER(10) NOT NULL,
	ITERNUM NUMBER(10)  NOT NULL,
	NUMEXECUTEDXACTS NUMBER(10)  NOT NULL,
	UNIQUE(CLIENTID, ITERNUM), -- same as batch's iternum
	FOREIGN KEY (CLIENTID) REFERENCES AZDBLAB_CLIENT(CLIENTID) ON DELETE CASCADE
);

-- Record a transaction execution result
DROP TABLE AZDBLAB_TRANSACTIONHASRESULT CASCADE CONSTRAINTS;
CREATE TABLE AZDBLAB_TRANSACTIONHASRESULT(
	XACTRESID NUMBER(10) NOT NULL PRIMARY KEY,
	CLIRESID NUMBER(10)  NOT NULL,
	XACTID NUMBER(10) NOT NULL,
	XACTITERNUM NUMBER(10) NOT NULL,
	RUNTIME NUMBER(10) NOT NULL,
	UNIQUE (CLIRESID, XACTID, XACTITERNUM),
	FOREIGN KEY (CLIRESID) REFERENCES AZDBLAB_CLIENTHASRESULT(CLIRESID) ON DELETE CASCADE,
	FOREIGN KEY (XACTID) REFERENCES AZDBLAB_TRANSACTION(XACTID) ON DELETE CASCADE
);

-- Record a statement execution result
DROP TABLE AZDBLAB_STATEMENTHASRESULT CASCADE CONSTRAINTS;
CREATE TABLE AZDBLAB_STATEMENTHASRESULT(
	XACTRESID NUMBER(10) NOT NULL,
	STMTID NUMBER(10) NOT NULL,
	STMTITERNUM NUMBER(10) NOT NULL,
	RUNTIME NUMBER(10) NOT NULL,
	LockWaitTime NUMBER(10),
	FOREIGN KEY (XACTRESID) REFERENCES AZDBLAB_TRANSACTIONHASRESULT(XACTRESID) ON DELETE CASCADE,
	FOREIGN KEY (STMTID) REFERENCES AZDBLAB_STATEMENT(STMTID) ON DELETE CASCADE,
	PRIMARY KEY (XACTRESID, STMTID, STMTITERNUM)
);

DROP SEQUENCE SEQ_BATCHSET;
CREATE SEQUENCE SEQ_BATCHSET   	START WITH 1 NOMAXVALUE;
DROP SEQUENCE SEQ_BATCH;
CREATE SEQUENCE SEQ_BATCH 	START WITH 1 NOMAXVALUE;
DROP SEQUENCE SEQ_CLIENT;
CREATE SEQUENCE SEQ_CLIENT 	START WITH 1 NOMAXVALUE;
DROP SEQUENCE SEQ_TRANSACTION;
CREATE SEQUENCE SEQ_TRANSACTION START WITH 1 NOMAXVALUE;
DROP SEQUENCE SEQ_STATEMENT;
CREATE SEQUENCE SEQ_STATEMENT 	START WITH 1 NOMAXVALUE;
DROP SEQUENCE SEQ_CLIENTRESULT;
CREATE SEQUENCE SEQ_CLIENTRESULT START WITH 1 NOMAXVALUE;
DROP SEQUENCE SEQ_XACTRESULT;
CREATE SEQUENCE SEQ_XACTRESULT 	START WITH 1 NOMAXVALUE;


-- old schema

-- AZDBLAB_EXPERIMENTRUNSTAT: store statistics 
--CREATE TABLE AZDBLAB_EXPERIMENTRUNSTAT(
--	RUNID NUMBER(10) NOT NULL PRIMARY KEY, -- runID indicates a batch (?)
	-- ABORTRATE NUMBER(10), 
	-- BLOCKRATE NUMBER(10), 
--	NUMCORES NUMBER(10),	-- number of cores
--	BUFFSIZE NUMBER(10),	-- DBMS buffer size
--	ISOLEVEL VARCHAR(30),	-- isolation level
--	MPL 	 NUMBER(10),	-- multi-programming level (can be computed from AZDBLAB_TERMINAL)
--	TRANSACTIONSIZE NUMBER(10,2),	-- transaction size: number of lock requests per transaction, represented by ratio
--	HOTSPOTRATIO NUMBER(10,2),	-- hot spot ratio
--	DURATION NUMBER(10,2),		-- total duration for this run
--	TPS 	 NUMBER(10),	-- Can be computed by # of total xacts / # of terminals / duration
--	FOREIGN KEY (RUNID) REFERENCES AZDBLAB_EXPERIMENTRUN(RUNID) ON DELETE CASCADE
--);

-- AZDBLAB_EXPERIMENTRUNSTAT: store statistics 
--CREATE TABLE AZDBLAB_XACTRUNSTAT(
--	RUNID NUMBER(10) NOT NULL, -- runID indicates a batch (?)
--	NUMCORES NUMBER(10),	-- number of cores
--	MPL 	 NUMBER(10),	-- multi-programming level (can be computed from AZDBLAB_TERMINAL)
--	DURATION NUMBER(10,2),		-- total duration for this run
--	NUMEXECUTEDXACTS NUMBER(10),	-- transactions 
--	PRIMARY KEY (RUNID, NUMCORES, MPL) REFERENCES AZDBLAB_EXPERIMENTRUN(RUNID) ON DELETE CASCADE
--	FOREIGN KEY (RUNID) REFERENCES AZDBLAB_EXPERIMENTRUN(RUNID) ON DELETE CASCADE
--);
