Sabah,

Please see below. 

Independent variables: PK, READ_SF, ROSE, and NUMPROCS
Dependent variables: ATPT and THRASHING_PT

Exploratory evaluation:

In the read group,

## db2
> nrow(db2_r) ### sample size
[1] 34
> out.fit <- lm(formula = THRASHING_PT ~ PK + READ_SF + ROSE + ATPT + NUMPROCS, data = db2_r)
> durbinWatsonTest(out.fit)
 lag Autocorrelation D-W Statistic p-value
   1        0.141302      1.642439   0.172
 Alternative hypothesis: rho != 0
## mysql
> nrow(mysql_r)
[1] 42
> out.fit <- lm(formula = THRASHING_PT ~ PK + READ_SF + ROSE + ATPT + NUMPROCS, data = mysql_r)
> durbinWatsonTest(out.fit)
 lag Autocorrelation D-W Statistic p-value
   1      0.07745788       1.59418   0.074
 Alternative hypothesis: rho != 0
## oracle
> nrow(oracle_r)
[1] 34
> out.fit <- lm(formula = THRASHING_PT ~ PK + READ_SF + ROSE + ATPT + NUMPROCS, data = oracle_r)
> durbinWatsonTest(out.fit)
 lag Autocorrelation D-W Statistic p-value
   1      0.01300011      1.919807   0.396
 Alternative hypothesis: rho != 0
## postgres
> nrow(pgsql_r)
[1] 40
> out.fit <- lm(formula = THRASHING_PT ~ PK + READ_SF + ROSE + ATPT + NUMPROCS, data = pgsql_r)
> durbinWatsonTest(out.fit)
 lag Autocorrelation D-W Statistic p-value
   1        0.621946     0.7558477       0
 Alternative hypothesis: rho != 0
## sqlserver
> nrow(sqlserver_r)
[1] 38
> out.fit <- lm(formula = THRASHING_PT ~ PK + READ_SF + ROSE + ATPT + NUMPROCS, data = sqlserver_r)
> durbinWatsonTest(out.fit)
 lag Autocorrelation D-W Statistic p-value
   1       -0.195273      2.277055   0.704
 Alternative hypothesis: rho != 0

### all the DBMSes
> x_r = rbind(db2_r,mysql_r,oracle_r,pgsql_r,sqlserver_r)
> nrow(x_r)
[1] 188
> out.fit <- lm(formula = THRASHING_PT ~ PK + READ_SF + ROSE + ATPT + NUMPROCS, data = x_r)
> durbinWatsonTest(out.fit)
 lag Autocorrelation D-W Statistic p-value
   1       0.5589201     0.8715399       0
 Alternative hypothesis: rho != 0. 

The positive correlation in the combined data seems caused by the PostgreSQL data.
In particular, the D-W stat of the Oracle data is almost close to two. Perhaps same with Sqlserver.
All things considered, the positive correlation in the overall data of the read group 
looks like not a serious concern, isn't it?

In the update group,

### update
# db2
> nrow(db2_w)
[1] 14
> out.fit <- lm(THRASHING_PT ~ PK + ATPT + NUMPROCS + UPDATE_SF + ROSE, data = db2_w)
> durbinWatsonTest(out.fit)
 lag Autocorrelation D-W Statistic p-value
   1      -0.6246547      3.208573    0.07
 Alternative hypothesis: rho != 0
# mysql
> nrow(mysql_w)
[1] 31
> out.fit <- lm(THRASHING_PT ~ PK + ATPT + NUMPROCS + UPDATE_SF + ROSE, data = mysql_w)
> durbinWatsonTest(out.fit)
 lag Autocorrelation D-W Statistic p-value
   1       0.2699188      1.387189   0.058
 Alternative hypothesis: rho != 0
# oracle
> nrow(oracle_w)
[1] 65
> out.fit <- lm(THRASHING_PT ~ PK + ATPT + NUMPROCS + UPDATE_SF + ROSE, data = oracle_w)
> durbinWatsonTest(out.fit)
 lag Autocorrelation D-W Statistic p-value
   1     -0.03717381      2.018206    0.836
 Alternative hypothesis: rho != 0
# pgsql
> nrow(pgsql_w)
[1] 75
> out.fit <- lm(THRASHING_PT ~ PK + ATPT + NUMPROCS + UPDATE_SF + ROSE, data = pgsql_w)
> durbinWatsonTest(out.fit)
 lag Autocorrelation D-W Statistic p-value
   1      0.02668038      1.935677   0.574
 Alternative hypothesis: rho != 0
# sqlserver
> nrow(sqlserver_w)
[1] 114
> out.fit <- lm(THRASHING_PT ~ PK + ATPT + NUMPROCS + UPDATE_SF + ROSE, data = sqlserver_w)
> durbinWatsonTest(out.fit)
 lag Autocorrelation D-W Statistic p-value
   1       0.2457297      1.508347   0.008
 Alternative hypothesis: rho != 0

### collect all the DBMSes' samples
> x_w = rbind(db2_w,mysql_w,oracle_w,pgsql_w,sqlserver_w)
> nrow(x_w)
[1] 299
> durbinWatsonTest(out.fit)
 lag Autocorrelation D-W Statistic p-value
   1       0.5452982     0.9006598       0
 Alternative hypothesis: rho != 0

There seem two issues in these evaluation. 
First, DB2, MySQL, and SqlServer data seem contributing to the positive correlation in the combined data. 
Second, the combined data look somewhat biased by Sqlserver while the DB2 and MySQL data had little powe. 
Would these two issues seriously hurt the regression results for the update group?

---- 

Confirmatory evaluation:

In the read group,

## db2
> nrow(db2_r) ### sample size
[1] 34
> out.fit <- lm(formula = THRASHING_PT ~ PK + ATPT + NUMPROCS, data = db2_r)
> durbinWatsonTest(out.fit)
 lag Autocorrelation D-W Statistic p-value
   1      -0.0606969       2.01542   0.792
 Alternative hypothesis: rho != 0
## mysql
> nrow(mysql_r)
[1] 45
> out.fit <- lm(formula = THRASHING_PT ~ PK + ATPT + NUMPROCS, data = mysql_r)
> durbinWatsonTest(out.fit)
 lag Autocorrelation D-W Statistic p-value
   1       0.2655616      1.242953   0.008
 Alternative hypothesis: rho != 0
## oracle
> nrow(oracle_r)
[1] 56
> out.fit <- lm(formula = THRASHING_PT ~ PK + ATPT + NUMPROCS, data = oracle_r)
> durbinWatsonTest(out.fit)
 lag Autocorrelation D-W Statistic p-value
   1      0.05203888      1.847575   0.414
 Alternative hypothesis: rho != 0
## postgres
> nrow(pgsql_r)
[1] 1
> out.fit <- lm(formula = THRASHING_PT ~ PK + ATPT + NUMPROCS, data = pgsql_r)
> durbinWatsonTest(out.fit)
 lag Autocorrelation D-W Statistic p-value
   1              NA            NA      NA
 Alternative hypothesis: rho != 0
## sqlserver
> nrow(sqlserver_r)
[1] 12
> out.fit <- lm(formula = THRASHING_PT ~ PK + ATPT + NUMPROCS, data = sqlserver_r)
> durbinWatsonTest(out.fit)
 lag Autocorrelation D-W Statistic p-value
   1       -0.195273      2.277055   0.704
 Alternative hypothesis: rho != 0

### all the DBMSes
> x_r = rbind(db2_r,mysql_r,oracle_r,pgsql_r,sqlserver_r)
> nrow(x_r)
[1] 148
> out.fit <- lm(formula = THRASHING_PT ~ PK + ATPT + NUMPROCS, data = x_r)
> durbinWatsonTest(out.fit)
 lag Autocorrelation D-W Statistic p-value
   1       0.2660653      1.442629       0
 Alternative hypothesis: rho != 0

The DB2 data scored two, and the Oracle and Sqlserver data also showed a close score to two. 
But the PostreSQL and MySQL data look causing positive correlation. Would this also hurt my results?

In the update group, 

### update
# db2
> nrow(db2_w)
[1] 4
> out.fit <- lm(THRASHING_PT ~ PK + ATPT + NUMPROCS + UPDATE_SF + ROSE, data = db2_w)
> durbinWatsonTest(out.fit)
 lag Autocorrelation D-W Statistic p-value
   1     -0.01202913       1.83287   0.864
 Alternative hypothesis: rho != 0
# mysql
> nrow(mysql_w)
[1] 31
> out.fit <- lm(THRASHING_PT ~ PK + ATPT + NUMPROCS + UPDATE_SF + ROSE, data = mysql_w)
> durbinWatsonTest(out.fit)
 lag Autocorrelation D-W Statistic p-value
   1       0.2815578       1.36935   0.054
 Alternative hypothesis: rho != 0
# oracle
> nrow(oracle_w)
[1] 30
> out.fit <- lm(THRASHING_PT ~ PK + ATPT + NUMPROCS + UPDATE_SF + ROSE, data = oracle_w)
> durbinWatsonTest(out.fit)
 lag Autocorrelation D-W Statistic p-value
   1    -0.003209438      1.964668    0.63
 Alternative hypothesis: rho != 0
# pgsql
> nrow(pgsql_w)
[1] 139
> out.fit <- lm(THRASHING_PT ~ PK + ATPT + NUMPROCS + UPDATE_SF + ROSE, data = pgsql_w)
> durbinWatsonTest(out.fit)
 lag Autocorrelation D-W Statistic p-value
   1      0.02668038      1.935677   0.574
 Alternative hypothesis: rho != 0
# sqlserver
> out.fit <- lm(MAXMPL ~ PK + ATP + NUMPROCESSORS + PCTUPDATE + ACTROWPOOL, data = sqlserver_w)
> nrow(sqlserver_w)
[1] 129
> durbinWatsonTest(out.fit)
 lag Autocorrelation D-W Statistic p-value
   1       0.6710034     0.6529241       0
 Alternative hypothesis: rho != 0
### collect all the DBMSes' samples
> x_w = rbind(db2_w,mysql_w,oracle_w,pgsql_w,sqlserver_w)
> nrow(x_w)
[1] 333
> durbinWatsonTest(out.fit)
 lag Autocorrelation D-W Statistic p-value
   1       0.5628106     0.8637937       0
 Alternative hypothesis: rho != 0

The DB2, Oracle, and PostgreSQL data look fine, but the MySQL and SqlServer data seem causing positive correlation. 
Also, the combined data look rather biased by PostgreSQL and Sqlserver while being little influenced by DB2.

Overall, do you think these per-DBMS results would be a concern?

Sincerely,

Young
